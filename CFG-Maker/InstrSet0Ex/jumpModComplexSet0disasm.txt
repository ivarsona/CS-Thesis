01 01		0x0: inc 01
02 06		0x2: jmp 06
01 01		0x4: inc 01
00 0b 03	0x6: movb 0b 03
02 00		0x9: jmp 00
00 10 0a	0xb: movb 10 0a
02 09		0xe: jmp 09
01 01		0x10: inc 01
01 01		0x12: inc 01

inc reg1 --> jumps to 0x6 --> rewrites byte 3 to b --> jumps to beginning
--> inc reg1 --> jumps to b --> rewrites a to e --> jumps to 9 --> jumps to e

expected codebytes/targets:
0x0 : target = 2
0x1 
0x2 : target = 6, b
0x3 : val 6, b
0x4 : 
0x5
0x6
0x7
0x8
0x9 : target = 0, a
0xa : val = 0, a
0xb : target = 9
0xc : val = 9
0xd
0xe
0xf
0x10
0x11
0x12
0x13 